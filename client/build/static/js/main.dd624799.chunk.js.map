{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","genre","year","movies","setMovies","movie","setMovie","useEffect","fetch","then","res","ok","json","jsonRes","handleChange","e","target","name","value","prevInput","className","onChange","onClick","preventDefault","alert","newMovie","axios","post","map","id","_id","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA8EeA,MAzEf,WAAgB,IAAD,EACeC,mBAAS,CAAC,CACpCC,MAAO,GACPC,MAAO,GACPC,KAAM,MAJK,mBACNC,EADM,KACEC,EADF,OAOaL,mBAAS,CACjCC,MAAO,GACPC,MAAO,GACPC,KAAM,KAVK,mBAONG,EAPM,KAOCC,EAPD,KAabC,qBAAU,WACRC,MAAM,WAAWC,MAAK,SAAAC,GACpB,GAAIA,EAAIC,GACN,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAAO,OAAIT,EAAUS,SAG/B,IAiBMC,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,OAAlBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACdZ,GAAS,SAAAa,GACP,OAAO,YAAC,eAEDA,GAFP,kBAGKF,EAAOC,QAMhB,OACE,sBAAKE,UAAU,MAAf,UACE,2CACA,iCACE,uBAAOC,SAAUP,EAAcG,KAAK,QAAQC,MAAOb,EAAML,QACzD,uBAAOqB,SAAUP,EAAcG,KAAK,QAAQC,MAAOb,EAAMJ,QACzD,uBAAOoB,SAAUP,EAAcG,KAAK,OAAOC,MAAOb,EAAMH,OACxD,wBAAQoB,QA/BG,SAAAP,GACfA,EAAEQ,iBACFC,MAAM,eACN,IAAMC,EAAW,CACfzB,MAAOK,EAAML,MACbC,MAAOI,EAAMJ,MACbC,KAAMG,EAAMH,MAGdwB,IAAMC,KAAK,YAAaF,IAsBpB,0BAEDtB,EAAOyB,KAAI,SAAAvB,GACV,OACE,gCACE,6BAAKA,EAAML,QACX,6BAAKK,EAAMJ,QACX,6BAAKI,EAAMH,OACX,wBAAQoB,QAAS,kBA5CNO,EA4CwBxB,EAAMyB,IA3CjDJ,IAAMK,OAAN,kBAAwBF,SACxBL,MAAM,iBAFY,IAACK,GA4CX,8BC1DGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dd624799.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([{\n    title: '',\n    genre: '',\n    year: ''\n  }]);\n\n  const [movie, setMovie] = useState({\n    title: '',\n    genre: '',\n    year: ''\n  });\n\n  useEffect(() => {\n    fetch('/movies').then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setMovies(jsonRes));\n  });\n\n  const deleteMovie = (id) => {\n    axios.delete(`/delete/${id}`);\n    alert(\"movie deleted\");\n  }\n\n  const addMovie = e => {\n    e.preventDefault();\n    alert('movie added');\n    const newMovie = {\n      title: movie.title,\n      genre: movie.genre,\n      year: movie.year\n    }\n\n    axios.post('/newmovie', newMovie);\n  }\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setMovie(prevInput => {\n      return (\n        {\n          ...prevInput,\n          [name]: value\n        }\n      )\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add Movie</h1>\n      <form>\n        <input onChange={handleChange} name=\"title\" value={movie.title} />\n        <input onChange={handleChange} name=\"genre\" value={movie.genre} />\n        <input onChange={handleChange} name=\"year\" value={movie.year} />\n        <button onClick={addMovie}>Add Movie</button>\n      </form>\n      {movies.map(movie => {\n        return (\n          <div>\n            <h1>{movie.title}</h1>\n            <h1>{movie.genre}</h1>\n            <h1>{movie.year}</h1>\n            <button onClick={() => deleteMovie(movie._id)}>Delete</button>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}